<?xml version="1.0"?>
<project version="2">
	<pipeline>
		<pass name="Shader" type="shader" active="true">
			<shader type="vs" path="shaders\Project_ShaderVS.glsl" entry="main" />
			<shader type="ps" path="shaders\Project_ShaderPS.glsl" entry="main" />
			<inputlayout>
				<item value="Position" semantic="POSITION" />
				<item value="Normal" semantic="NORMAL" />
				<item value="Texcoord" semantic="TEXCOORD0" />
			</inputlayout>
			<rendertexture />
			<items>
				<item name="gSphere" type="geometry">
					<type>Sphere</type>
					<width>1</width>
					<height>1</height>
					<depth>1</depth>
					<topology>TriangleList</topology>
				</item>
			</items>
			<itemvalues />
			<variables>
				<variable type="float4x4" name="uProjMat" system="Projection" />
				<variable type="float4x4" name="uViewMat" system="View" />
				<variable type="float4x4" name="uModelMat" system="GeometryTransform" />
				<variable type="float" name="uTime" system="Time" />
			</variables>
			<macros />
		</pass>
	</pipeline>
	<objects>
		<object type="texture" path="textures\Earth.jpg" vflip="true" min_filter="Linear" mag_filter="Nearest" wrap_s="Repeat" wrap_t="Repeat">
			<bind slot="0" name="Shader" />
		</object>
		<object type="texture" path="textures\Ocean_Mask.png" vflip="true" min_filter="Linear" mag_filter="Nearest" wrap_s="Repeat" wrap_t="Repeat">
			<bind slot="1" name="Shader" />
		</object>
		<object type="texture" path="textures\Lights_Mask.png" vflip="true" min_filter="Linear" mag_filter="Nearest" wrap_s="Repeat" wrap_t="Repeat">
			<bind slot="2" name="Shader" />
		</object>
	</objects>
	<cameras />
	<settings>
		<entry type="property" name="gSphere" item="pipe" />
		<entry type="file" name="Shader" shader="vs" />
		<entry type="file" name="Shader" shader="ps" />
		<entry type="camera" fp="false">
			<distance>4</distance>
			<pitch>19</pitch>
			<yaw>284</yaw>
			<roll>360</roll>
		</entry>
		<entry type="clearcolor" r="0" g="0" b="0" a="0" />
		<entry type="usealpha" val="false" />
	</settings>
	<plugindata />
</project>
