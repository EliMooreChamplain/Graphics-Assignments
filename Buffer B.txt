//Eli Moore
//Lab 6
// GLSL STARTER CODE BY DANIEL S. BUCKSTEIN
//  -> BUFFER B TAB

//------------------------------------------------------------
// SHADERTOY MAIN

// mainImage: process the current pixel (exactly one call per pixel)
//    fragColor: output final color for current pixel
//    fragCoord: input location of current pixel in image (in pixels)
void mainImage(out color4 fragColor, in sCoord fragCoord)
{
    // setup
    // test UV for input image
    sCoord uv = fragCoord / iChannelResolution[0].xy;
    
    color4 textureColor = texture(iChannel0, uv);
    
	//Get average brightness of the pixel
    float averageBrightness = (textureColor.x + textureColor.y + textureColor.z) * 0.333333;
    color4 finalColor = vec4(averageBrightness,averageBrightness,averageBrightness,1.0);
    
	//---Old Code---
    //Using desmos:
    //t = threshold
    //F(x)=(x-t)(1/(1-t))x
    //finalColor -= vec4(threshold,threshold,threshold,1.0);
    //finalColor *= (1.0/(1.0 - threshold)) * textureColor;
    
	//Cube the final color to get bright brights and dark darks
    finalColor *= finalColor;
    finalColor *= finalColor;
    
    
        
    // TESTING
    // set iChannel0 to 'Misc/Buffer A' and fetch sample
    fragColor = finalColor;
}
